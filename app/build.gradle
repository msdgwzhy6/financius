/*
 * Copyright (C) 2015 Mantas Varnagiris.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.android.databinding'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

Properties props = new Properties()
try {
    File propsFile = new File('financius.properties')
    props.load(propsFile.newDataInputStream())
} catch (Exception ignore) {
}

android {
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId "com.mvcoding.financius"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "ENDPOINT_WEB_CLIENT_ID", "\"" + props.getProperty('endpoint_web_client_id') + "\""
        buildConfigField "String", "LOCAL_SERVER_IP", "\"" + getLocalIp() + "\""
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':core')

    // Play Services
    compile 'com.google.android.gms:play-services-base:8.1.0'
    compile 'com.google.android.gms:play-services-gcm:8.1.0'
    compile 'com.google.android.gms:play-services-identity:8.1.0'
    compile 'com.google.android.gms:play-services-analytics:8.1.0'
    compile 'com.google.android.gms:play-services-maps:8.1.0'
    compile 'com.google.android.gms:play-services-location:8.1.0'

    // Support
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:support-annotations:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:cardview-v7:23.0.1'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'me.relex:circleindicator:1.1.5@aar'
    compile 'me.grantland:autofittextview:0.2.1'
    compile 'net.danlew:android.joda:2.8.2'

    // RxJava
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.jakewharton.rxbinding:rxbinding:0.2.0'
    compile 'com.squareup.sqlbrite:sqlbrite:0.2.1'

    // Injection
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.google.dagger:dagger:2.0.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'frankiesardo:icepick:3.1.0'
    apt 'frankiesardo:icepick-processor:3.1.0'
    apt 'com.google.dagger:dagger-compiler:2.0.1'

    // Network
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'

    // Debugging
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true
    }
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-SNAPSHOT'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-SNAPSHOT'

    // Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.31-beta'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile('com.squareup.assertj:assertj-android:1.0.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // Lombok
    provided "org.projectlombok:lombok:1.16.6"
    apt "org.projectlombok:lombok:1.16.6"
}

def getLocalIp() {
    return InetAddress.getLocalHost().getHostAddress();
}
